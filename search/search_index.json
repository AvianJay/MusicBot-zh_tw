{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the JMusicBot wiki! # \ud83d\udd22 Setup \u23f0 24/7 Hosting \ud83d\udcc3 Playlists \ud83d\udcdc Full Command Reference \u26a0 Troubleshooting \ud83d\udce5 Support Server Features # Easy to run (just make sure Java is installed, and run!) Fast loading of songs No external keys needed (besides a Discord Bot token) Smooth playback Server-specific setup for the \"DJ\" role that can moderate the music Clean and beautiful menus Supports many sites, including Youtube, Soundcloud, and more Supports many online radio/streams Supports local files Playlist support (both web/youtube, and local) Supported sources and formats # JMusicBot supports all sources and formats supported by lavaplayer : Sources # YouTube SoundCloud Bandcamp Vimeo Twitch streams Local files HTTP URLs Formats # MP3 FLAC WAV Matroska/WebM (AAC, Opus or Vorbis codecs) MP4/M4A (AAC codec) OGG streams (Opus, Vorbis and FLAC codecs) AAC streams Stream playlists (M3U and PLS) Example # Setup # Please see the Setup Page in the wiki to run this bot yourself!","title":"Home"},{"location":"#welcome-to-the-jmusicbot-wiki","text":"\ud83d\udd22 Setup \u23f0 24/7 Hosting \ud83d\udcc3 Playlists \ud83d\udcdc Full Command Reference \u26a0 Troubleshooting \ud83d\udce5 Support Server","title":"Welcome to the JMusicBot wiki!"},{"location":"#features","text":"Easy to run (just make sure Java is installed, and run!) Fast loading of songs No external keys needed (besides a Discord Bot token) Smooth playback Server-specific setup for the \"DJ\" role that can moderate the music Clean and beautiful menus Supports many sites, including Youtube, Soundcloud, and more Supports many online radio/streams Supports local files Playlist support (both web/youtube, and local)","title":"Features"},{"location":"#supported-sources-and-formats","text":"JMusicBot supports all sources and formats supported by lavaplayer :","title":"Supported sources and formats"},{"location":"#sources","text":"YouTube SoundCloud Bandcamp Vimeo Twitch streams Local files HTTP URLs","title":"Sources"},{"location":"#formats","text":"MP3 FLAC WAV Matroska/WebM (AAC, Opus or Vorbis codecs) MP4/M4A (AAC codec) OGG streams (Opus, Vorbis and FLAC codecs) AAC streams Stream playlists (M3U and PLS)","title":"Formats"},{"location":"#example","text":"","title":"Example"},{"location":"#setup","text":"Please see the Setup Page in the wiki to run this bot yourself!","title":"Setup"},{"location":"adding-your-bot/","text":"\u9084\u6c92\u6709\u5275\u5efa\u61c9\u7528\u7a0b\u5f0f\uff1f \u5982\u679c\u60a8\u9084\u6c92\u6709\u5275\u5efa\u6a5f\u5668\u4eba\u61c9\u7528\u7a0b\u5f0f\uff0c\u8acb\u53c3\u8003 \u7372\u53d6\u6a5f\u5668\u4eba Token \u4f86\u4e86\u89e3\u5982\u4f55\u8a2d\u7f6e\uff01 \u524d\u5f80 \u61c9\u7528\u7a0b\u5f0f\u9801\u9762 \u4e26\u9078\u64c7\u60a8\u7684\u5176\u4e2d\u4e00\u500b\u6a5f\u5668\u4eba\u61c9\u7528\u7a0b\u5f0f\u3002 \u5728\u8a2d\u7f6e\u5217\u8868\u4e2d\uff0c\u9078\u64c7 OAuth2 \u3002 \u5728 Scopes \u5340\u57df\uff0c\u52fe\u9078 Bot \u3002 \u9ede\u64ca \u8907\u88fd \u6309\u9215\u5c07 OAuth2 URL \u8907\u88fd\u5230\u526a\u8cbc\u7c3f\u3002 \u5c07\u93c8\u63a5\u8cbc\u5230\u60a8\u7684\u700f\u89bd\u5668\u4e2d\u3002 \u5f9e\u4e0b\u62c9\u9078\u55ae\u4e2d\u9078\u64c7\u4e00\u500b\u4f3a\u670d\u5668\uff0c\u7136\u5f8c\u9ede\u64ca \u6388\u6b0a \u3002 \u60a8\u5fc5\u9808\u64c1\u6709\u7ba1\u7406\u4f3a\u670d\u5668\u7684\u6b0a\u9650\u624d\u80fd\u5c07\u6a5f\u5668\u4eba\u6dfb\u52a0\u5230\u4f3a\u670d\u5668\uff01 \u5982\u679c\u672a\u986f\u793a\u4efb\u4f55\u4f3a\u670d\u5668\uff0c\u60a8\u53ef\u80fd\u9700\u8981 \u767b\u9304 \u3002 \u7591\u96e3\u6392\u89e3 # \u5982\u679c\u60a8\u6536\u5230 \"\u9700\u8981\u6388\u6b0a\u78bc (Requires Code Grant)\" \u932f\u8aa4\uff0c\u8acb\u78ba\u4fdd\u60a8\u7684\u61c9\u7528\u7a0b\u5f0f\u4e2d\u8a72\u9078\u9805\u672a\u88ab\u52fe\u9078\uff1a \u5982\u679c\u60a8\u60f3\u624b\u52d5\u751f\u6210\u93c8\u63a5\uff0c\u8acb\u5c07\u4ee5\u4e0b\u93c8\u63a5\u4e2d\u7684 CLIENTID \u66ff\u63db\u70ba\u60a8\u7684\u6a5f\u5668\u4eba\u5ba2\u6236\u7aef ID\uff1a https://discordapp.com/oauth2/authorize?client_id=CLIENTID&scope=bot","title":"\u5c07\u60a8\u7684\u6a5f\u5668\u4eba\u6dfb\u52a0\u5230\u60a8\u7684\u4f3a\u670d\u5668"},{"location":"adding-your-bot/#_1","text":"\u5982\u679c\u60a8\u6536\u5230 \"\u9700\u8981\u6388\u6b0a\u78bc (Requires Code Grant)\" \u932f\u8aa4\uff0c\u8acb\u78ba\u4fdd\u60a8\u7684\u61c9\u7528\u7a0b\u5f0f\u4e2d\u8a72\u9078\u9805\u672a\u88ab\u52fe\u9078\uff1a \u5982\u679c\u60a8\u60f3\u624b\u52d5\u751f\u6210\u93c8\u63a5\uff0c\u8acb\u5c07\u4ee5\u4e0b\u93c8\u63a5\u4e2d\u7684 CLIENTID \u66ff\u63db\u70ba\u60a8\u7684\u6a5f\u5668\u4eba\u5ba2\u6236\u7aef ID\uff1a https://discordapp.com/oauth2/authorize?client_id=CLIENTID&scope=bot","title":"\u7591\u96e3\u6392\u89e3"},{"location":"advanced-config/","text":"\u6307\u5b9a\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6 # \u53ef\u4ee5\u4f7f\u7528 -Dconfig=/path/to/config.file \u547d\u4ee4\u884c\u9078\u9805\u4f86\u8a2d\u7f6e\u8981\u7528\u4f5c\u914d\u7f6e\u6587\u4ef6\u7684\u4e0d\u540c\u6587\u4ef6\u3002\u4f8b\u5982\uff1a java -Dconfig = alternate_config.txt -jar JMusicBot.jar \u9019\u5c07\u904b\u884c\u6a5f\u5668\u4eba\uff0c\u5f9e alternate_config.txt \u52a0\u8f09\uff0c\u800c\u4e0d\u662f config.txt \u3002 \u5f9e\u547d\u4ee4\u884c\u6307\u5b9a\u914d\u7f6e\u9078\u9805 # \u985e\u4f3c\u65bc -Dconfig \u9078\u9805\uff0c\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u8a2d\u7f6e\u4e5f\u53ef\u4ee5\u5f9e\u547d\u4ee4\u884c\u8a2d\u7f6e\u3002\u4f8b\u5982\uff0c\u8981\u5f9e\u547d\u4ee4\u884c\u8a2d\u7f6e\u524d\u7db4\uff08\u800c\u4e0d\u662f\u5f9e\u914d\u7f6e\u4e2d\uff09\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 -Dprefix=\"!!\" \uff08\u5982\u679c\u503c\u5305\u542b\u7a7a\u683c\u6216\u67d0\u4e9b\u7279\u6b8a\u5b57\u7b26\uff0c\u5247\u9700\u8981\u7528\u5f15\u865f\u62ec\u8d77\u4f86\uff09\u3002\u4f8b\u5982\uff1a java -Dprefix = \"!\" -jar JMusicBot.jar \u5f9e\u74b0\u5883\u8b8a\u91cf\u6307\u5b9a\u914d\u7f6e\u9078\u9805 # \u8981\u4f7f\u7528\u74b0\u5883\u8b8a\u91cf\u4f5c\u70ba\u914d\u7f6e\uff0c\u6709\u5169\u7a2e\u9078\u64c7\u3002\u4ee5\u4e0b\u4f8b\u5b50\u5047\u8a2d\u524d\u7db4\u5df2\u8a2d\u7f6e\u70ba\u74b0\u5883\u8b8a\u91cf CUSTOM_PREFIX \u3002 \u5f9e\u547d\u4ee4\u884c # \u8981\u5f9e\u547d\u4ee4\u884c\u4f7f\u7528\u74b0\u5883\u8b8a\u91cf\uff0c\u4f7f\u7528\u4e0a\u9762\u7684\u76f8\u540c\u7cfb\u7d71\uff0c\u4f46\u66ff\u63db\u70ba\u89e3\u6790\u7684\u8b8a\u91cf\u540d\u7a31\u3002\u4f8b\u5982\uff1a java -Dprefix = \" $CUSTOM_PREFIX \" -jar JMusicBot.jar \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d # \u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u4f7f\u7528\u74b0\u5883\u8b8a\u91cf\uff0c\u8acb\u6309\u5982\u4e0b\u65b9\u5f0f\u6307\u5b9a\uff1a // \u9019\u662f\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d prefix = ${CUSTOM_PREFIX}","title":"\u9032\u968e\u914d\u7f6e\u9078\u9805"},{"location":"advanced-config/#_1","text":"\u53ef\u4ee5\u4f7f\u7528 -Dconfig=/path/to/config.file \u547d\u4ee4\u884c\u9078\u9805\u4f86\u8a2d\u7f6e\u8981\u7528\u4f5c\u914d\u7f6e\u6587\u4ef6\u7684\u4e0d\u540c\u6587\u4ef6\u3002\u4f8b\u5982\uff1a java -Dconfig = alternate_config.txt -jar JMusicBot.jar \u9019\u5c07\u904b\u884c\u6a5f\u5668\u4eba\uff0c\u5f9e alternate_config.txt \u52a0\u8f09\uff0c\u800c\u4e0d\u662f config.txt \u3002","title":"\u6307\u5b9a\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6"},{"location":"advanced-config/#_2","text":"\u985e\u4f3c\u65bc -Dconfig \u9078\u9805\uff0c\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4efb\u4f55\u8a2d\u7f6e\u4e5f\u53ef\u4ee5\u5f9e\u547d\u4ee4\u884c\u8a2d\u7f6e\u3002\u4f8b\u5982\uff0c\u8981\u5f9e\u547d\u4ee4\u884c\u8a2d\u7f6e\u524d\u7db4\uff08\u800c\u4e0d\u662f\u5f9e\u914d\u7f6e\u4e2d\uff09\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 -Dprefix=\"!!\" \uff08\u5982\u679c\u503c\u5305\u542b\u7a7a\u683c\u6216\u67d0\u4e9b\u7279\u6b8a\u5b57\u7b26\uff0c\u5247\u9700\u8981\u7528\u5f15\u865f\u62ec\u8d77\u4f86\uff09\u3002\u4f8b\u5982\uff1a java -Dprefix = \"!\" -jar JMusicBot.jar","title":"\u5f9e\u547d\u4ee4\u884c\u6307\u5b9a\u914d\u7f6e\u9078\u9805"},{"location":"advanced-config/#_3","text":"\u8981\u4f7f\u7528\u74b0\u5883\u8b8a\u91cf\u4f5c\u70ba\u914d\u7f6e\uff0c\u6709\u5169\u7a2e\u9078\u64c7\u3002\u4ee5\u4e0b\u4f8b\u5b50\u5047\u8a2d\u524d\u7db4\u5df2\u8a2d\u7f6e\u70ba\u74b0\u5883\u8b8a\u91cf CUSTOM_PREFIX \u3002","title":"\u5f9e\u74b0\u5883\u8b8a\u91cf\u6307\u5b9a\u914d\u7f6e\u9078\u9805"},{"location":"advanced-config/#_4","text":"\u8981\u5f9e\u547d\u4ee4\u884c\u4f7f\u7528\u74b0\u5883\u8b8a\u91cf\uff0c\u4f7f\u7528\u4e0a\u9762\u7684\u76f8\u540c\u7cfb\u7d71\uff0c\u4f46\u66ff\u63db\u70ba\u89e3\u6790\u7684\u8b8a\u91cf\u540d\u7a31\u3002\u4f8b\u5982\uff1a java -Dprefix = \" $CUSTOM_PREFIX \" -jar JMusicBot.jar","title":"\u5f9e\u547d\u4ee4\u884c"},{"location":"advanced-config/#_5","text":"\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u4f7f\u7528\u74b0\u5883\u8b8a\u91cf\uff0c\u8acb\u6309\u5982\u4e0b\u65b9\u5f0f\u6307\u5b9a\uff1a // \u9019\u662f\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d prefix = ${CUSTOM_PREFIX}","title":"\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d"},{"location":"advanced-eval/","text":"Danger \u8acb\u8a18\u4f4f\uff0ceval \u547d\u4ee4\u5177\u6709\u6f5b\u5728\u5371\u96aa\u6027\uff1b\u96d6\u7136\u5b83\u53ea\u5141\u8a31\u6a5f\u5668\u4eba\u64c1\u6709\u8005\u4f7f\u7528\uff0c\u4f46 \u5207\u52ff \u904b\u884c\u60a8\u4e0d\u719f\u6089\u7684\u8173\u672c\uff01 \u4ee5\u4e0b\u662f\u4e00\u4e9b\u53ef\u4ee5\u901a\u904e eval \u547d\u4ee4\u904b\u884c\u7684\u8173\u672c\u793a\u4f8b\uff08\u50c5\u9650\u6a5f\u5668\u4eba\u64c1\u6709\u8005\uff09\u3002\u5982\u679c\u60a8\u7684\u6a5f\u5668\u4eba\u524d\u7db4\u8a2d\u7f6e\u70ba !! \uff0c\u4e26\u4e14\u5df2\u555f\u7528\u4e86 eval \u547d\u4ee4\uff0c\u5247\u53ef\u4ee5\u50cf\u4e0b\u9762\u5217\u51fa\u7684\u7b2c\u4e00\u500b\u4f8b\u5b50\u4e00\u6a23\u904b\u884c eval\uff08\u4f8b\u5982\uff1a !!eval jda.guilds \uff09\u3002 \u5217\u51fa\u6a5f\u5668\u4eba\u6240\u5728\u7684\u6240\u6709\u4f3a\u670d\u5668 # jda . guilds \u96e2\u958b\u7279\u5b9a\u4f3a\u670d\u5668 # jda . getGuildById ( \"GUILDIDHERE\" ). leave (). queue ()","title":"\u9032\u968e Eval \u8173\u672c"},{"location":"advanced-eval/#_1","text":"jda . guilds","title":"\u5217\u51fa\u6a5f\u5668\u4eba\u6240\u5728\u7684\u6240\u6709\u4f3a\u670d\u5668"},{"location":"advanced-eval/#_2","text":"jda . getGuildById ( \"GUILDIDHERE\" ). leave (). queue ()","title":"\u96e2\u958b\u7279\u5b9a\u4f3a\u670d\u5668"},{"location":"advanced-playlists/","text":"\u6b64\u9801\u9762\u63cf\u8ff0\u5982\u4f55\u5f9e\u6587\u4ef6\u593e\u751f\u6210\u64ad\u653e\u6e05\u55ae\uff08txt\uff09\u6587\u4ef6\u3002\u9019\u4e9b\u7bc4\u4f8b\u5047\u8a2d\u60a8\u7684\u6b4c\u66f2\u70ba mp3 \u683c\u5f0f\uff1b\u5982\u679c\u60a8\u4f7f\u7528\u4e0d\u540c\u683c\u5f0f\uff0c\u8acb\u5728\u6240\u6709\u63d0\u4f9b\u7684\u547d\u4ee4\u4e2d\u5c07 mp3 \u66ff\u63db\u70ba\u60a8\u7684\u683c\u5f0f\u3002 Windows\uff08\u684c\u9762\uff09 # \u5728\u5305\u542b\u6b4c\u66f2\u7684\u6587\u4ef6\u593e\u4e2d\u6253\u958b Powershell\uff08\u60a8\u53ef\u4ee5\u6309\u4f4f Shift \u4e26\u53f3\u9375\u9ede\u64ca\uff0c\u7136\u5f8c\u5f9e Explorer \u8996\u7a97\u4e2d\u9078\u64c7\u5728\u6b64\u8655\u6253\u958b Powershell \u8996\u7a97\uff09 \u57f7\u884c Get-ChildItem . -Filter *.mp3 -Recurse | % { $_.FullName } | out-file -encoding ASCII songs.txt \u5c07 songs.txt \u79fb\u52d5\u5230\u60a8\u7684 Playlists \u6587\u4ef6\u593e\uff0c\u4e26\u5c07\u5176\u91cd\u547d\u540d\u70ba\u60a8\u60f3\u8981\u7684\u64ad\u653e\u6e05\u55ae\u540d\u7a31\u3002 \u5982\u679c\u60a8\u60f3\u6dfb\u52a0\u5176\u4ed6\u6b4c\u66f2\u6216\u8a55\u8ad6\uff0c\u53ef\u4ee5\u7de8\u8f2f songs.txt Linux\uff08\u547d\u4ee4\u5217\uff09 # \u700f\u89bd\u5230\u5305\u542b\u6b4c\u66f2\u7684\u6587\u4ef6\u593e ( cd /path/to/the/folder ) \u57f7\u884c find \"$(pwd)\" | grep \".mp3\" > songs.txt \u5c07 songs.txt \u79fb\u52d5\u5230\u60a8\u7684 Playlists \u6587\u4ef6\u593e\u4e26\u91cd\u547d\u540d ( mv songs.txt /path/to/Playlists/playlistname.txt )","title":"\u9032\u968e\u64ad\u653e\u6e05\u55ae\u751f\u6210"},{"location":"advanced-playlists/#windows","text":"\u5728\u5305\u542b\u6b4c\u66f2\u7684\u6587\u4ef6\u593e\u4e2d\u6253\u958b Powershell\uff08\u60a8\u53ef\u4ee5\u6309\u4f4f Shift \u4e26\u53f3\u9375\u9ede\u64ca\uff0c\u7136\u5f8c\u5f9e Explorer \u8996\u7a97\u4e2d\u9078\u64c7\u5728\u6b64\u8655\u6253\u958b Powershell \u8996\u7a97\uff09 \u57f7\u884c Get-ChildItem . -Filter *.mp3 -Recurse | % { $_.FullName } | out-file -encoding ASCII songs.txt \u5c07 songs.txt \u79fb\u52d5\u5230\u60a8\u7684 Playlists \u6587\u4ef6\u593e\uff0c\u4e26\u5c07\u5176\u91cd\u547d\u540d\u70ba\u60a8\u60f3\u8981\u7684\u64ad\u653e\u6e05\u55ae\u540d\u7a31\u3002 \u5982\u679c\u60a8\u60f3\u6dfb\u52a0\u5176\u4ed6\u6b4c\u66f2\u6216\u8a55\u8ad6\uff0c\u53ef\u4ee5\u7de8\u8f2f songs.txt","title":"Windows\uff08\u684c\u9762\uff09"},{"location":"advanced-playlists/#linux","text":"\u700f\u89bd\u5230\u5305\u542b\u6b4c\u66f2\u7684\u6587\u4ef6\u593e ( cd /path/to/the/folder ) \u57f7\u884c find \"$(pwd)\" | grep \".mp3\" > songs.txt \u5c07 songs.txt \u79fb\u52d5\u5230\u60a8\u7684 Playlists \u6587\u4ef6\u593e\u4e26\u91cd\u547d\u540d ( mv songs.txt /path/to/Playlists/playlistname.txt )","title":"Linux\uff08\u547d\u4ee4\u5217\uff09"},{"location":"commands/","text":"\u6b64\u9801\u9762\u5305\u542b\u6240\u6709\u6307\u4ee4\u7684\u5b8c\u6574\u5217\u8868\u3002\u9019\u4e9b\u6307\u4ee4\uff08\u53ca\u5176\u63cf\u8ff0\uff09\u4e5f\u53ef\u4ee5\u900f\u904e help \u6307\u4ee4\u67e5\u770b\u3002 Tip \u4f7f\u7528 <> \u62ec\u8d77\u4f86\u7684\u53c3\u6578\u662f\u5fc5\u9700\u7684\uff0c\u800c\u4f7f\u7528 [] \u62ec\u8d77\u4f86\u7684\u53c3\u6578\u662f\u53ef\u9078\u7684\u3002\u57f7\u884c\u6307\u4ee4\u6642\u4e0d\u8981\u5305\u542b <> \u6216 [] \uff01 \ud83d\udcdc \u4e00\u822c\u6307\u4ee4 # \u9019\u4e9b\u662f\u4e00\u822c\u7528\u9014\u7684\u6307\u4ee4\uff0c\u7528\u65bc\u67e5\u770b\u6709\u95dc\u6a5f\u5668\u4eba\u7684\u8cc7\u8a0a about # \u986f\u793a\u6709\u95dc\u6a5f\u5668\u4eba\u7684\u57fa\u672c\u8cc7\u8a0a\uff0c\u5305\u62ec\u5176\u7a0b\u5f0f\u5eab\u3001\u6846\u67b6\u548c\u4e00\u4e9b\u7d71\u8a08\u6578\u64da ping # \u986f\u793a\u6a5f\u5668\u4eba\u8207 Discord \u4e4b\u9593\u7684\u5ef6\u9072\u3002\u4e00\u822c\u4f86\u8aaa\uff0c80-250ms \u662f\u6b63\u5e38\u503c\u3002 settings # \u986f\u793a\u7576\u524d\u4f3a\u670d\u5668\u7684\u8a2d\u5b9a\u3002\u5305\u62ec\u6587\u5b57\u983b\u9053\u3001\u8a9e\u97f3\u983b\u9053\u3001DJ \u8eab\u5206\u7d44\u548c\u9810\u8a2d\u64ad\u653e\u6e05\u55ae\u3002\u6b64\u6307\u4ee4\u4e5f\u986f\u793a\u6a5f\u5668\u4eba\u5728\u591a\u5c11\u4f3a\u670d\u5668\u4e0a\u4ee5\u53ca\u7576\u524d\u6709\u591a\u5c11\u97f3\u983b\u9023\u63a5\u3002 \ud83d\udcdc \u97f3\u6a02\u6307\u4ee4 # \u9019\u4e9b\u6307\u4ee4\u8207\u64ad\u653e\u97f3\u6a02\u6709\u95dc\uff0c\u6240\u6709\u4f7f\u7528\u8005\u7686\u53ef\u4f7f\u7528\u3002\u5982\u679c\u5df2\u8a2d\u5b9a\u6587\u5b57\u983b\u9053\uff0c\u9019\u4e9b\u6307\u4ee4\u53ea\u80fd\u5728\u8a72\u983b\u9053\u4e2d\u4f7f\u7528\u3002 lyrics [\u6b4c\u66f2\u540d\u7a31] # \u53d6\u5f97\u6307\u5b9a\u6b4c\u66f2\u7684\u6b4c\u8a5e\uff0c\u82e5\u672a\u63d0\u4f9b\u540d\u7a31\u5247\u986f\u793a\u7576\u524d\u64ad\u653e\u6b4c\u66f2\u7684\u6b4c\u8a5e nowplaying (\u6216 np \u6216 current ) # \u986f\u793a\u7576\u524d\u64ad\u653e\u6b4c\u66f2\u7684\u8cc7\u8a0a\uff08\u540d\u7a31\u3001\u6dfb\u52a0\u8005\u3001\u7576\u524d\u6642\u9593\u6233\u548c\u6b4c\u66f2 URL\uff09 play # \u986f\u793a\u64ad\u653e\u6307\u4ee4\u3002\u5982\u679c\u64ad\u653e\u5668\u5df2\u66ab\u505c\uff0c\u5247\u6062\u5fa9\u64ad\u653e\u3002 play <URL> # \u64ad\u653e\u6307\u5b9a URL \u7684\u6b4c\u66f2\u6216\u4e32\u6d41\u3002\u652f\u63f4\u7684\u4f86\u6e90\u5305\u62ec\uff08\u4f46\u4e0d\u9650\u65bc\uff09\uff1aYouTube\uff08\u53ca\u64ad\u653e\u6e05\u55ae\uff09\u3001SoundCloud\u3001BandCamp\u3001Vimeo \u548c Twitch\u3002\u4e5f\u652f\u63f4\u672c\u5730\u6587\u4ef6\u6216\u4ee5\u4e0b\u683c\u5f0f\u7684 URL\uff1aMP3\u3001FLAC\u3001WAV\u3001Matroska/WebM\uff08AAC\u3001Opus \u6216 Vorbis \u7de8\u89e3\u78bc\u5668\uff09\u3001MP4/M4A\uff08AAC \u7de8\u89e3\u78bc\u5668\uff09\u3001OGG \u4e32\u6d41\uff08Opus\u3001Vorbis \u548c FLAC \u7de8\u89e3\u78bc\u5668\uff09\u3001AAC \u4e32\u6d41\u3001\u64ad\u653e\u6e05\u55ae\uff08M3U \u548c PLS\uff09 play <\u6b4c\u66f2\u540d\u7a31> # \u64ad\u653e\u6307\u5b9a\u6b4c\u66f2\u540d\u7a31\u7684 YouTube \u9996\u500b\u641c\u7d22\u7d50\u679c play playlist <\u64ad\u653e\u6e05\u55ae\u540d\u7a31> (\u6216 play pl <\u64ad\u653e\u6e05\u55ae\u540d\u7a31> ) # \u64ad\u653e\u6307\u5b9a\u64ad\u653e\u6e05\u55ae\u4e2d\u7684\u6240\u6709\u6b4c\u66f2\u3002\u8a72\u540d\u7a31\u7684\u64ad\u653e\u6e05\u55ae\u5fc5\u9808\u5df2\u5b58\u5728\u65bc Playlists \u6587\u4ef6\u593e\u4e2d playlists # \u986f\u793a\u53ef\u7528\u7684\u64ad\u653e\u6e05\u55ae\u3002\u9019\u4e9b\u64ad\u653e\u6e05\u55ae\u5fc5\u9808\u4f4d\u65bc Playlists \u6587\u4ef6\u593e\u4e2d\u3002 queue [\u9801\u78bc] (\u6216 list [\u9801\u78bc] ) # \u986f\u793a\u4f47\u5217\u4e2d\u7684\u6b4c\u66f2\u3002\u5982\u679c\u672a\u63d0\u4f9b\u9801\u78bc\uff0c\u5247\u9810\u8a2d\u70ba\u7b2c\u4e00\u9801\u3002 remove <\u6b4c\u66f2\u7de8\u865f> (\u6216 delete <\u6b4c\u66f2\u7de8\u865f> ) # \u79fb\u9664\u4f47\u5217\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u6b4c\u66f2\u3002\u60a8\u53ea\u80fd\u79fb\u9664\u81ea\u5df1\u6dfb\u52a0\u7684\u6b4c\u66f2\uff0c\u9664\u975e\u60a8\u662f\u7ba1\u7406\u54e1\u6216\u64c1\u6709\u6307\u5b9a\u7684 DJ \u8eab\u5206\u7d44\u3002 remove all (\u6216 delete all ) # \u79fb\u9664\u60a8\u6dfb\u52a0\u5230\u4f47\u5217\u4e2d\u7684\u6240\u6709\u6b4c\u66f2 search <\u67e5\u8a62> (\u6216 ytsearch <\u67e5\u8a62> ) # \u986f\u793a YouTube \u7684\u641c\u7d22\u7d50\u679c\u4e26\u5141\u8a31\u60a8\u9078\u64c7\u6dfb\u52a0\u81f3\u4f47\u5217 scsearch <\u67e5\u8a62> # \u986f\u793a SoundCloud \u7684\u641c\u7d22\u7d50\u679c\u4e26\u5141\u8a31\u60a8\u9078\u64c7\u6dfb\u52a0\u81f3\u4f47\u5217 seek [+ | -] <HH:MM:SS | MM:SS | SS>|<0h0m0s | 0m0s | 0s> # \u5728\u7576\u524d\u6b4c\u66f2\u4e2d\u9032\u884c\u5feb\u9032\u6216\u5feb\u9000\u3002\u4f7f\u7528 + \u548c - \u5feb\u9032\u6216\u5feb\u9000\uff0c\u6216\u76f4\u63a5\u4f7f\u7528\u5177\u9ad4\u7684\u6642\u9593\u6233\u3002 shuffle # \u96a8\u6a5f\u6253\u4e82\u60a8\u5df2\u6dfb\u52a0\u5230\u4f47\u5217\u4e2d\u7684\u6b4c\u66f2\u9806\u5e8f skip (\u6216 voteskip ) # \u8df3\u904e\u60a8\u6dfb\u52a0\u7684\u6b4c\u66f2\u3002\u5982\u679c\u60a8\u672a\u6dfb\u52a0\u8a72\u6b4c\u66f2\uff0c\u5247\u6dfb\u52a0\u8df3\u904e\u8a72\u6b4c\u66f2\u7684\u6295\u7968\u3002\u7d04 60% \u7684\u6d3b\u8e8d\u807d\u773e\u9700\u8981\u6295\u7968\u624d\u80fd\u8df3\u904e\u6b4c\u66f2\u3002 \ud83d\udcdc DJ \u6307\u4ee4 # \u6240\u6709\u7ba1\u7406\u54e1\u90fd\u80fd\u81ea\u52d5\u4f7f\u7528 DJ \u6307\u4ee4\u3002\u7ba1\u7406\u54e1\u9084\u53ef\u4ee5\u5206\u914d\u4e00\u500b\u4f3a\u670d\u5668\u89d2\u8272\u4f5c\u70ba \"DJ \u8eab\u5206\u7d44\"\uff0c\u5177\u6709\u8a72\u89d2\u8272\u7684\u4f7f\u7528\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9019\u4e9b\u6307\u4ee4\u3002 forceremove <\u4f7f\u7528\u8005> (\u6216 forcedelete <\u4f7f\u7528\u8005> \u6216 modremove <\u4f7f\u7528\u8005> \u6216 moddelete <\u4f7f\u7528\u8005> ) # \u5f37\u5236\u79fb\u9664\u6307\u5b9a\u4f7f\u7528\u8005\u6dfb\u52a0\u7684\u6240\u6709\u6b4c\u66f2 forceskip (\u6216 modskip ) # \u5f37\u5236\u8df3\u904e\u7576\u524d\u6b4c\u66f2\uff0c\u7121\u8ad6\u8ab0\u6dfb\u52a0\u6216\u6709\u591a\u5c11\u7968\u6578\u8df3\u904e movetrack <from> <to> (\u6216 move <from> <to> ) # \u5c07\u4f47\u5217\u4e2d\u4f4d\u7f6e \u7684\u6b4c\u66f2\u79fb\u52d5\u5230\u4f4d\u7f6e pause # \u66ab\u505c\u64ad\u653e\u5668\u3002\u76f4\u5230 DJ \u6216\u7ba1\u7406\u54e1\u4f7f\u7528 play \u6307\u4ee4\uff0c\u64ad\u653e\u5668\u624d\u6703\u7e7c\u7e8c\u64ad\u653e playnext <\u6b4c\u66f2\u540d\u7a31 | URL> # \u5c07\u55ae\u66f2\u653e\u7f6e\u5728\u4f47\u5217\u7684\u6700\u524d\u65b9\uff0c\u4f5c\u70ba\u4e0b\u4e00\u9996\u64ad\u653e\uff08\u5982\u679c\u7576\u524d\u6c92\u6709\u64ad\u653e\u4efb\u4f55\u5167\u5bb9\uff0c\u5247\u7acb\u5373\u64ad\u653e\uff09 repeat [on | off] # \u5c07\u64ad\u653e\u5668\u8a2d\u7f6e\u70ba\u91cd\u8907\u6a21\u5f0f\u3002\u5728\u91cd\u8907\u6a21\u5f0f\u4e2d\uff0c\u7576\u6b4c\u66f2\u81ea\u7136\u7d50\u675f\u6642\uff08\u672a\u79fb\u9664\u6216\u8df3\u904e\uff09\uff0c\u5b83\u5011\u5c07\u91cd\u65b0\u6dfb\u52a0\u5230\u4f47\u5217\u4e2d\u3002 skipto <\u4f4d\u7f6e> # \u8df3\u904e\u4f47\u5217\u4e2d\u7684\u6b4c\u66f2\uff0c\u76f4\u63a5\u64ad\u653e\u6307\u5b9a\u7684\u6b4c\u66f2\uff0c\u4e26\u79fb\u9664\u4e4b\u524d\u7684\u6240\u6709\u6b4c\u66f2 stop # \u6e05\u7a7a\u4f47\u5217\uff0c\u7d50\u675f\u7576\u524d\u64ad\u653e\u7684\u6b4c\u66f2\u4e26\u96e2\u958b\u8a9e\u97f3\u983b\u9053 volume [0-150] (\u6216 vol [0-150] ) # \u986f\u793a\u6216\u8a2d\u7f6e\u7576\u524d\u97f3\u91cf\u3002\u70ba\u4e86\u7372\u5f97\u6700\u4f73\u6548\u80fd\uff0c\u5efa\u8b70\u5c07\u6b64\u8a2d\u7f6e\u70ba 100\uff0c\u4e26\u5728 Discord \u4e2d\u55ae\u7368\u8abf\u6574\u97f3\u91cf \ud83d\udcdc \u7ba1\u7406\u54e1\u6307\u4ee4 # \u7ba1\u7406\u54e1\u6307\u4ee4\u53ef\u7531\u4efb\u4f55\u5177\u6709\u7ba1\u7406\u4f3a\u670d\u5668\u6b0a\u9650\u7684\u4f7f\u7528\u8005\u4f7f\u7528\u3002 prefix <\u524d\u7db4> # \u8a2d\u7f6e\u4f3a\u670d\u5668\u5c08\u5c6c\u524d\u7db4 prefix none # \u6e05\u9664\u4f3a\u670d\u5668\u5c08\u5c6c\u524d\u7db4 queuetype [linear | fair] # \u8a2d\u7f6e\u4f47\u5217\u985e\u578b setdj <\u89d2\u8272\u540d\u7a31> # \u8a2d\u7f6e DJ \u8eab\u5206\u7d44\u3002\u64c1\u6709\u8a72\u89d2\u8272\u7684\u4f7f\u7528\u8005\u5c07\u80fd\u5920\u4f7f\u7528 DJ \u6307\u4ee4\u3002 setdj none # \u6e05\u9664 DJ \u8eab\u5206\u7d44\u3002\u53ea\u6709\u7ba1\u7406\u54e1\u53ef\u4ee5\u4f7f\u7528 DJ \u6307\u4ee4\u3002 setskip <0 - 100> # \u8a2d\u7f6e\u4f3a\u670d\u5668\u5c08\u5c6c\u7684\u8df3\u904e\u6bd4\u4f8b\uff08\u9700\u8981\u6295\u7968\u8df3\u904e\u6b4c\u66f2\u7684\u807d\u773e\u767e\u5206\u6bd4\uff09 settc <\u983b\u9053> # \u8a2d\u7f6e\u97f3\u6a02\u6307\u4ee4\u7684\u6587\u5b57\u983b\u9053\u3002\u5728\u5176\u4ed6\u983b\u9053\u4e2d\u4f7f\u7528\u97f3\u6a02\u6307\u4ee4\u5c07\u88ab\u522a\u9664\uff08\u5982\u679c\u53ef\u80fd\u7684\u8a71\uff09\uff0c\u4e26\u900f\u904e\u79c1\u8a0a\u767c\u9001\u8b66\u544a\uff0c\u544a\u77e5\u4f7f\u7528\u8005\u4f7f\u7528\u6b63\u78ba\u983b\u9053\u3002\u6b64\u5916\uff0c\u5982\u679c\u6a5f\u5668\u4eba\u5728\u8a2d\u7f6e\u7684\u983b\u9053\u4e2d\u5177\u6709\u7ba1\u7406\u983b\u9053\u7684\u6b0a\u9650\uff0c\u5b83\u5c07\u8abf\u6574\u983b\u9053\u4e3b\u984c\u4ee5\u986f\u793a\u7576\u524d\u64ad\u653e\u7684\u6b4c\u66f2\u3002 settc none # \u6e05\u9664\u6587\u5b57\u983b\u9053 setvc <\u983b\u9053> # \u8a2d\u7f6e\u64ad\u653e\u97f3\u6a02\u7684\u8a9e\u97f3\u983b\u9053\u3002\u8a2d\u7f6e\u5f8c\uff0c\u53ea\u6709\u5728\u4f7f\u7528\u8005\u5617\u8a66\u64ad\u653e\u97f3\u6a02\u6642\uff0c\u6a5f\u5668\u4eba\u624d\u6703\u9023\u63a5\u5230\u6307\u5b9a\u983b\u9053\u3002 setvc none # \u6e05\u9664\u64ad\u653e\u97f3\u6a02\u7684\u8a9e\u97f3\u983b\u9053\u3002\u9019\u610f\u5473\u8457\u4f7f\u7528\u8005\u53ef\u4ee5\u5f9e\u6a5f\u5668\u4eba\u80fd\u9023\u63a5\u5230\u7684\u4efb\u4f55\u983b\u9053\u64ad\u653e\u97f3\u6a02\uff08\u5982\u679c\u6a5f\u5668\u4eba\u7576\u524d\u672a\u9023\u63a5\u5230\u5176\u4ed6\u983b\u9053\uff09 \ud83d\udcdc \u64c1\u6709\u8005\u6307\u4ee4 # \u9019\u4e9b\u6307\u4ee4\u53ea\u80fd\u7531\u6a5f\u5668\u4eba\u64c1\u6709\u8005\u4f7f\u7528\uff08\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8a2d\u7f6e\uff09 autoplaylist <\u64ad\u653e\u6e05\u55ae\u540d\u7a31> # \u8a2d\u7f6e\u4f3a\u670d\u5668\u7684\u9810\u8a2d\u64ad\u653e\u6e05\u55ae\uff0c\u7576\u4f47\u5217\u70ba\u7a7a\u4e14\u6a5f\u5668\u4eba\u555f\u52d5\u6642\u64ad\u653e\u6b64\u64ad\u653e\u6e05\u55ae\uff08\u8207 playlist setdefault \u76f8\u540c\uff09 debug # \u751f\u6210\u5305\u542b\u8abf\u8a66\u8cc7\u8a0a\u7684\u6587\u4ef6 playlist append <\u64ad\u653e\u6e05\u55ae\u540d\u7a31> <\u9805\u76ee> | [\u9805\u76ee] | [\u9805\u76ee]... # \u5411\u73fe\u6709\u64ad\u653e\u6e05\u55ae\u4e2d\u6dfb\u52a0\u9805\u76ee\u3002\u9805\u76ee\u5fc5\u9808\u662f URL\u3002\u8981\u6dfb\u52a0 YouTube \u641c\u7d22\uff0c\u5fc5\u9808\u4f7f\u7528 \"ytsearch:query\" \u7684\u683c\u5f0f\u3002\u5c0d\u65bc SoundCloud \u641c\u7d22\uff0c\u4f7f\u7528 \"scsearch:query\"\u3002 playlist delete <\u64ad\u653e\u6e05\u55ae\u540d\u7a31> # \u522a\u9664\u64ad\u653e\u6e05\u55ae\u6587\u4ef6 playlist make <\u64ad\u653e\u6e05\u55ae\u540d\u7a31> # \u5275\u5efa\u65b0\u7684\u7a7a\u767d\u64ad\u653e\u6e05\u55ae playlist setdefault <\u64ad\u653e\u6e05\u55ae\u540d\u7a31> # \u8a2d\u7f6e\u4f3a\u670d\u5668\u7684\u9810\u8a2d\u64ad\u653e\u6e05\u55ae\uff0c\u7576\u4f47\u5217\u70ba\u7a7a\u4e14\u6a5f\u5668\u4eba\u555f\u52d5\u6642\u64ad\u653e\u6b64\u64ad\u653e\u6e05\u55ae playlist setdefault none # \u6e05\u9664\u9810\u8a2d\u64ad\u653e\u6e05\u55ae setavatar <url> # \u8a2d\u7f6e\u6a5f\u5668\u4eba\u7684 \u982d\u50cf setgame [\u904a\u6232] # \u8a2d\u7f6e\u6a5f\u5668\u4eba\u6b63\u5728\u73a9\u7684\u904a\u6232 setgame stream <\u7528\u6236\u540d> <\u904a\u6232\u540d\u7a31> # \u8a2d\u7f6e\u6a5f\u5668\u4eba\u6b63\u5728 \"\u4e32\u6d41\" \u7684\u904a\u6232 setname <\u540d\u7a31> # \u8a2d\u7f6e\u6a5f\u5668\u4eba\u7684\u4f7f\u7528\u8005\u540d\u7a31 setstatus <\u72c0\u614b> # \u8a2d\u7f6e\u6a5f\u5668\u4eba\u7684\u72c0\u614b\uff08\u5728\u7dda\u3001\u9592\u7f6e\u3001\u52ff\u64fe\u3001\u96b1\u5f62\uff09 shutdown # \u5b89\u5168\u95dc\u9589","title":"\u6307\u4ee4"},{"location":"commands/#_1","text":"\u9019\u4e9b\u662f\u4e00\u822c\u7528\u9014\u7684\u6307\u4ee4\uff0c\u7528\u65bc\u67e5\u770b\u6709\u95dc\u6a5f\u5668\u4eba\u7684\u8cc7\u8a0a","title":"\ud83d\udcdc \u4e00\u822c\u6307\u4ee4"},{"location":"commands/#about","text":"\u986f\u793a\u6709\u95dc\u6a5f\u5668\u4eba\u7684\u57fa\u672c\u8cc7\u8a0a\uff0c\u5305\u62ec\u5176\u7a0b\u5f0f\u5eab\u3001\u6846\u67b6\u548c\u4e00\u4e9b\u7d71\u8a08\u6578\u64da","title":"about"},{"location":"commands/#ping","text":"\u986f\u793a\u6a5f\u5668\u4eba\u8207 Discord \u4e4b\u9593\u7684\u5ef6\u9072\u3002\u4e00\u822c\u4f86\u8aaa\uff0c80-250ms \u662f\u6b63\u5e38\u503c\u3002","title":"ping"},{"location":"commands/#settings","text":"\u986f\u793a\u7576\u524d\u4f3a\u670d\u5668\u7684\u8a2d\u5b9a\u3002\u5305\u62ec\u6587\u5b57\u983b\u9053\u3001\u8a9e\u97f3\u983b\u9053\u3001DJ \u8eab\u5206\u7d44\u548c\u9810\u8a2d\u64ad\u653e\u6e05\u55ae\u3002\u6b64\u6307\u4ee4\u4e5f\u986f\u793a\u6a5f\u5668\u4eba\u5728\u591a\u5c11\u4f3a\u670d\u5668\u4e0a\u4ee5\u53ca\u7576\u524d\u6709\u591a\u5c11\u97f3\u983b\u9023\u63a5\u3002","title":"settings"},{"location":"commands/#_2","text":"\u9019\u4e9b\u6307\u4ee4\u8207\u64ad\u653e\u97f3\u6a02\u6709\u95dc\uff0c\u6240\u6709\u4f7f\u7528\u8005\u7686\u53ef\u4f7f\u7528\u3002\u5982\u679c\u5df2\u8a2d\u5b9a\u6587\u5b57\u983b\u9053\uff0c\u9019\u4e9b\u6307\u4ee4\u53ea\u80fd\u5728\u8a72\u983b\u9053\u4e2d\u4f7f\u7528\u3002","title":"\ud83d\udcdc \u97f3\u6a02\u6307\u4ee4"},{"location":"commands/#lyrics","text":"\u53d6\u5f97\u6307\u5b9a\u6b4c\u66f2\u7684\u6b4c\u8a5e\uff0c\u82e5\u672a\u63d0\u4f9b\u540d\u7a31\u5247\u986f\u793a\u7576\u524d\u64ad\u653e\u6b4c\u66f2\u7684\u6b4c\u8a5e","title":"lyrics [\u6b4c\u66f2\u540d\u7a31]"},{"location":"commands/#nowplaying-np-current","text":"\u986f\u793a\u7576\u524d\u64ad\u653e\u6b4c\u66f2\u7684\u8cc7\u8a0a\uff08\u540d\u7a31\u3001\u6dfb\u52a0\u8005\u3001\u7576\u524d\u6642\u9593\u6233\u548c\u6b4c\u66f2 URL\uff09","title":"nowplaying (\u6216 np \u6216 current)"},{"location":"commands/#play","text":"\u986f\u793a\u64ad\u653e\u6307\u4ee4\u3002\u5982\u679c\u64ad\u653e\u5668\u5df2\u66ab\u505c\uff0c\u5247\u6062\u5fa9\u64ad\u653e\u3002","title":"play"},{"location":"commands/#play-url","text":"\u64ad\u653e\u6307\u5b9a URL \u7684\u6b4c\u66f2\u6216\u4e32\u6d41\u3002\u652f\u63f4\u7684\u4f86\u6e90\u5305\u62ec\uff08\u4f46\u4e0d\u9650\u65bc\uff09\uff1aYouTube\uff08\u53ca\u64ad\u653e\u6e05\u55ae\uff09\u3001SoundCloud\u3001BandCamp\u3001Vimeo \u548c Twitch\u3002\u4e5f\u652f\u63f4\u672c\u5730\u6587\u4ef6\u6216\u4ee5\u4e0b\u683c\u5f0f\u7684 URL\uff1aMP3\u3001FLAC\u3001WAV\u3001Matroska/WebM\uff08AAC\u3001Opus \u6216 Vorbis \u7de8\u89e3\u78bc\u5668\uff09\u3001MP4/M4A\uff08AAC \u7de8\u89e3\u78bc\u5668\uff09\u3001OGG \u4e32\u6d41\uff08Opus\u3001Vorbis \u548c FLAC \u7de8\u89e3\u78bc\u5668\uff09\u3001AAC \u4e32\u6d41\u3001\u64ad\u653e\u6e05\u55ae\uff08M3U \u548c PLS\uff09","title":"play &lt;URL&gt;"},{"location":"commands/#play_1","text":"\u64ad\u653e\u6307\u5b9a\u6b4c\u66f2\u540d\u7a31\u7684 YouTube \u9996\u500b\u641c\u7d22\u7d50\u679c","title":"play &lt;\u6b4c\u66f2\u540d\u7a31&gt;"},{"location":"commands/#play-playlist-play-pl","text":"\u64ad\u653e\u6307\u5b9a\u64ad\u653e\u6e05\u55ae\u4e2d\u7684\u6240\u6709\u6b4c\u66f2\u3002\u8a72\u540d\u7a31\u7684\u64ad\u653e\u6e05\u55ae\u5fc5\u9808\u5df2\u5b58\u5728\u65bc Playlists \u6587\u4ef6\u593e\u4e2d","title":"play playlist &lt;\u64ad\u653e\u6e05\u55ae\u540d\u7a31&gt; (\u6216 play pl &lt;\u64ad\u653e\u6e05\u55ae\u540d\u7a31&gt;)"},{"location":"commands/#playlists","text":"\u986f\u793a\u53ef\u7528\u7684\u64ad\u653e\u6e05\u55ae\u3002\u9019\u4e9b\u64ad\u653e\u6e05\u55ae\u5fc5\u9808\u4f4d\u65bc Playlists \u6587\u4ef6\u593e\u4e2d\u3002","title":"playlists"},{"location":"commands/#queue-list","text":"\u986f\u793a\u4f47\u5217\u4e2d\u7684\u6b4c\u66f2\u3002\u5982\u679c\u672a\u63d0\u4f9b\u9801\u78bc\uff0c\u5247\u9810\u8a2d\u70ba\u7b2c\u4e00\u9801\u3002","title":"queue [\u9801\u78bc] (\u6216 list [\u9801\u78bc])"},{"location":"commands/#remove-delete","text":"\u79fb\u9664\u4f47\u5217\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u6b4c\u66f2\u3002\u60a8\u53ea\u80fd\u79fb\u9664\u81ea\u5df1\u6dfb\u52a0\u7684\u6b4c\u66f2\uff0c\u9664\u975e\u60a8\u662f\u7ba1\u7406\u54e1\u6216\u64c1\u6709\u6307\u5b9a\u7684 DJ \u8eab\u5206\u7d44\u3002","title":"remove &lt;\u6b4c\u66f2\u7de8\u865f&gt; (\u6216 delete &lt;\u6b4c\u66f2\u7de8\u865f&gt;)"},{"location":"commands/#remove-all-delete-all","text":"\u79fb\u9664\u60a8\u6dfb\u52a0\u5230\u4f47\u5217\u4e2d\u7684\u6240\u6709\u6b4c\u66f2","title":"remove all (\u6216 delete all)"},{"location":"commands/#search-ytsearch","text":"\u986f\u793a YouTube \u7684\u641c\u7d22\u7d50\u679c\u4e26\u5141\u8a31\u60a8\u9078\u64c7\u6dfb\u52a0\u81f3\u4f47\u5217","title":"search &lt;\u67e5\u8a62&gt; (\u6216 ytsearch &lt;\u67e5\u8a62&gt;)"},{"location":"commands/#scsearch","text":"\u986f\u793a SoundCloud \u7684\u641c\u7d22\u7d50\u679c\u4e26\u5141\u8a31\u60a8\u9078\u64c7\u6dfb\u52a0\u81f3\u4f47\u5217","title":"scsearch &lt;\u67e5\u8a62&gt;"},{"location":"commands/#seek-hhmmss-mmss-ss0h0m0s-0m0s-0s","text":"\u5728\u7576\u524d\u6b4c\u66f2\u4e2d\u9032\u884c\u5feb\u9032\u6216\u5feb\u9000\u3002\u4f7f\u7528 + \u548c - \u5feb\u9032\u6216\u5feb\u9000\uff0c\u6216\u76f4\u63a5\u4f7f\u7528\u5177\u9ad4\u7684\u6642\u9593\u6233\u3002","title":"seek [+ | -] &lt;HH:MM:SS | MM:SS | SS&gt;|&lt;0h0m0s | 0m0s | 0s&gt;"},{"location":"commands/#shuffle","text":"\u96a8\u6a5f\u6253\u4e82\u60a8\u5df2\u6dfb\u52a0\u5230\u4f47\u5217\u4e2d\u7684\u6b4c\u66f2\u9806\u5e8f","title":"shuffle"},{"location":"commands/#skip-voteskip","text":"\u8df3\u904e\u60a8\u6dfb\u52a0\u7684\u6b4c\u66f2\u3002\u5982\u679c\u60a8\u672a\u6dfb\u52a0\u8a72\u6b4c\u66f2\uff0c\u5247\u6dfb\u52a0\u8df3\u904e\u8a72\u6b4c\u66f2\u7684\u6295\u7968\u3002\u7d04 60% \u7684\u6d3b\u8e8d\u807d\u773e\u9700\u8981\u6295\u7968\u624d\u80fd\u8df3\u904e\u6b4c\u66f2\u3002","title":"skip (\u6216 voteskip)"},{"location":"commands/#dj","text":"\u6240\u6709\u7ba1\u7406\u54e1\u90fd\u80fd\u81ea\u52d5\u4f7f\u7528 DJ \u6307\u4ee4\u3002\u7ba1\u7406\u54e1\u9084\u53ef\u4ee5\u5206\u914d\u4e00\u500b\u4f3a\u670d\u5668\u89d2\u8272\u4f5c\u70ba \"DJ \u8eab\u5206\u7d44\"\uff0c\u5177\u6709\u8a72\u89d2\u8272\u7684\u4f7f\u7528\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9019\u4e9b\u6307\u4ee4\u3002","title":"\ud83d\udcdc DJ \u6307\u4ee4"},{"location":"commands/#forceremove-forcedelete-modremove-moddelete","text":"\u5f37\u5236\u79fb\u9664\u6307\u5b9a\u4f7f\u7528\u8005\u6dfb\u52a0\u7684\u6240\u6709\u6b4c\u66f2","title":"forceremove &lt;\u4f7f\u7528\u8005&gt; (\u6216 forcedelete &lt;\u4f7f\u7528\u8005&gt; \u6216 modremove &lt;\u4f7f\u7528\u8005&gt; \u6216 moddelete &lt;\u4f7f\u7528\u8005&gt;)"},{"location":"commands/#forceskip-modskip","text":"\u5f37\u5236\u8df3\u904e\u7576\u524d\u6b4c\u66f2\uff0c\u7121\u8ad6\u8ab0\u6dfb\u52a0\u6216\u6709\u591a\u5c11\u7968\u6578\u8df3\u904e","title":"forceskip (\u6216 modskip)"},{"location":"commands/#movetrack-from-to-move-from-to","text":"\u5c07\u4f47\u5217\u4e2d\u4f4d\u7f6e \u7684\u6b4c\u66f2\u79fb\u52d5\u5230\u4f4d\u7f6e","title":"movetrack &lt;from&gt; &lt;to&gt; (\u6216 move &lt;from&gt; &lt;to&gt;)"},{"location":"commands/#pause","text":"\u66ab\u505c\u64ad\u653e\u5668\u3002\u76f4\u5230 DJ \u6216\u7ba1\u7406\u54e1\u4f7f\u7528 play \u6307\u4ee4\uff0c\u64ad\u653e\u5668\u624d\u6703\u7e7c\u7e8c\u64ad\u653e","title":"pause"},{"location":"commands/#playnext-url","text":"\u5c07\u55ae\u66f2\u653e\u7f6e\u5728\u4f47\u5217\u7684\u6700\u524d\u65b9\uff0c\u4f5c\u70ba\u4e0b\u4e00\u9996\u64ad\u653e\uff08\u5982\u679c\u7576\u524d\u6c92\u6709\u64ad\u653e\u4efb\u4f55\u5167\u5bb9\uff0c\u5247\u7acb\u5373\u64ad\u653e\uff09","title":"playnext &lt;\u6b4c\u66f2\u540d\u7a31 | URL&gt;"},{"location":"commands/#repeat-on-off","text":"\u5c07\u64ad\u653e\u5668\u8a2d\u7f6e\u70ba\u91cd\u8907\u6a21\u5f0f\u3002\u5728\u91cd\u8907\u6a21\u5f0f\u4e2d\uff0c\u7576\u6b4c\u66f2\u81ea\u7136\u7d50\u675f\u6642\uff08\u672a\u79fb\u9664\u6216\u8df3\u904e\uff09\uff0c\u5b83\u5011\u5c07\u91cd\u65b0\u6dfb\u52a0\u5230\u4f47\u5217\u4e2d\u3002","title":"repeat [on | off]"},{"location":"commands/#skipto","text":"\u8df3\u904e\u4f47\u5217\u4e2d\u7684\u6b4c\u66f2\uff0c\u76f4\u63a5\u64ad\u653e\u6307\u5b9a\u7684\u6b4c\u66f2\uff0c\u4e26\u79fb\u9664\u4e4b\u524d\u7684\u6240\u6709\u6b4c\u66f2","title":"skipto &lt;\u4f4d\u7f6e&gt;"},{"location":"commands/#stop","text":"\u6e05\u7a7a\u4f47\u5217\uff0c\u7d50\u675f\u7576\u524d\u64ad\u653e\u7684\u6b4c\u66f2\u4e26\u96e2\u958b\u8a9e\u97f3\u983b\u9053","title":"stop"},{"location":"commands/#volume-0-150-vol-0-150","text":"\u986f\u793a\u6216\u8a2d\u7f6e\u7576\u524d\u97f3\u91cf\u3002\u70ba\u4e86\u7372\u5f97\u6700\u4f73\u6548\u80fd\uff0c\u5efa\u8b70\u5c07\u6b64\u8a2d\u7f6e\u70ba 100\uff0c\u4e26\u5728 Discord \u4e2d\u55ae\u7368\u8abf\u6574\u97f3\u91cf","title":"volume [0-150] (\u6216 vol [0-150])"},{"location":"commands/#_3","text":"\u7ba1\u7406\u54e1\u6307\u4ee4\u53ef\u7531\u4efb\u4f55\u5177\u6709\u7ba1\u7406\u4f3a\u670d\u5668\u6b0a\u9650\u7684\u4f7f\u7528\u8005\u4f7f\u7528\u3002","title":"\ud83d\udcdc \u7ba1\u7406\u54e1\u6307\u4ee4"},{"location":"commands/#prefix","text":"\u8a2d\u7f6e\u4f3a\u670d\u5668\u5c08\u5c6c\u524d\u7db4","title":"prefix &lt;\u524d\u7db4&gt;"},{"location":"commands/#prefix-none","text":"\u6e05\u9664\u4f3a\u670d\u5668\u5c08\u5c6c\u524d\u7db4","title":"prefix none"},{"location":"commands/#queuetype-linear-fair","text":"\u8a2d\u7f6e\u4f47\u5217\u985e\u578b","title":"queuetype [linear | fair]"},{"location":"commands/#setdj","text":"\u8a2d\u7f6e DJ \u8eab\u5206\u7d44\u3002\u64c1\u6709\u8a72\u89d2\u8272\u7684\u4f7f\u7528\u8005\u5c07\u80fd\u5920\u4f7f\u7528 DJ \u6307\u4ee4\u3002","title":"setdj &lt;\u89d2\u8272\u540d\u7a31&gt;"},{"location":"commands/#setdj-none","text":"\u6e05\u9664 DJ \u8eab\u5206\u7d44\u3002\u53ea\u6709\u7ba1\u7406\u54e1\u53ef\u4ee5\u4f7f\u7528 DJ \u6307\u4ee4\u3002","title":"setdj none"},{"location":"commands/#setskip-0-100","text":"\u8a2d\u7f6e\u4f3a\u670d\u5668\u5c08\u5c6c\u7684\u8df3\u904e\u6bd4\u4f8b\uff08\u9700\u8981\u6295\u7968\u8df3\u904e\u6b4c\u66f2\u7684\u807d\u773e\u767e\u5206\u6bd4\uff09","title":"setskip &lt;0 - 100&gt;"},{"location":"commands/#settc","text":"\u8a2d\u7f6e\u97f3\u6a02\u6307\u4ee4\u7684\u6587\u5b57\u983b\u9053\u3002\u5728\u5176\u4ed6\u983b\u9053\u4e2d\u4f7f\u7528\u97f3\u6a02\u6307\u4ee4\u5c07\u88ab\u522a\u9664\uff08\u5982\u679c\u53ef\u80fd\u7684\u8a71\uff09\uff0c\u4e26\u900f\u904e\u79c1\u8a0a\u767c\u9001\u8b66\u544a\uff0c\u544a\u77e5\u4f7f\u7528\u8005\u4f7f\u7528\u6b63\u78ba\u983b\u9053\u3002\u6b64\u5916\uff0c\u5982\u679c\u6a5f\u5668\u4eba\u5728\u8a2d\u7f6e\u7684\u983b\u9053\u4e2d\u5177\u6709\u7ba1\u7406\u983b\u9053\u7684\u6b0a\u9650\uff0c\u5b83\u5c07\u8abf\u6574\u983b\u9053\u4e3b\u984c\u4ee5\u986f\u793a\u7576\u524d\u64ad\u653e\u7684\u6b4c\u66f2\u3002","title":"settc &lt;\u983b\u9053&gt;"},{"location":"commands/#settc-none","text":"\u6e05\u9664\u6587\u5b57\u983b\u9053","title":"settc none"},{"location":"commands/#setvc","text":"\u8a2d\u7f6e\u64ad\u653e\u97f3\u6a02\u7684\u8a9e\u97f3\u983b\u9053\u3002\u8a2d\u7f6e\u5f8c\uff0c\u53ea\u6709\u5728\u4f7f\u7528\u8005\u5617\u8a66\u64ad\u653e\u97f3\u6a02\u6642\uff0c\u6a5f\u5668\u4eba\u624d\u6703\u9023\u63a5\u5230\u6307\u5b9a\u983b\u9053\u3002","title":"setvc &lt;\u983b\u9053&gt;"},{"location":"commands/#setvc-none","text":"\u6e05\u9664\u64ad\u653e\u97f3\u6a02\u7684\u8a9e\u97f3\u983b\u9053\u3002\u9019\u610f\u5473\u8457\u4f7f\u7528\u8005\u53ef\u4ee5\u5f9e\u6a5f\u5668\u4eba\u80fd\u9023\u63a5\u5230\u7684\u4efb\u4f55\u983b\u9053\u64ad\u653e\u97f3\u6a02\uff08\u5982\u679c\u6a5f\u5668\u4eba\u7576\u524d\u672a\u9023\u63a5\u5230\u5176\u4ed6\u983b\u9053\uff09","title":"setvc none"},{"location":"commands/#_4","text":"\u9019\u4e9b\u6307\u4ee4\u53ea\u80fd\u7531\u6a5f\u5668\u4eba\u64c1\u6709\u8005\u4f7f\u7528\uff08\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u8a2d\u7f6e\uff09","title":"\ud83d\udcdc \u64c1\u6709\u8005\u6307\u4ee4"},{"location":"commands/#autoplaylist","text":"\u8a2d\u7f6e\u4f3a\u670d\u5668\u7684\u9810\u8a2d\u64ad\u653e\u6e05\u55ae\uff0c\u7576\u4f47\u5217\u70ba\u7a7a\u4e14\u6a5f\u5668\u4eba\u555f\u52d5\u6642\u64ad\u653e\u6b64\u64ad\u653e\u6e05\u55ae\uff08\u8207 playlist setdefault \u76f8\u540c\uff09","title":"autoplaylist &lt;\u64ad\u653e\u6e05\u55ae\u540d\u7a31&gt;"},{"location":"commands/#debug","text":"\u751f\u6210\u5305\u542b\u8abf\u8a66\u8cc7\u8a0a\u7684\u6587\u4ef6","title":"debug"},{"location":"commands/#playlist-append","text":"\u5411\u73fe\u6709\u64ad\u653e\u6e05\u55ae\u4e2d\u6dfb\u52a0\u9805\u76ee\u3002\u9805\u76ee\u5fc5\u9808\u662f URL\u3002\u8981\u6dfb\u52a0 YouTube \u641c\u7d22\uff0c\u5fc5\u9808\u4f7f\u7528 \"ytsearch:query\" \u7684\u683c\u5f0f\u3002\u5c0d\u65bc SoundCloud \u641c\u7d22\uff0c\u4f7f\u7528 \"scsearch:query\"\u3002","title":"playlist append &lt;\u64ad\u653e\u6e05\u55ae\u540d\u7a31&gt; &lt;\u9805\u76ee&gt; | [\u9805\u76ee] | [\u9805\u76ee]..."},{"location":"commands/#playlist-delete","text":"\u522a\u9664\u64ad\u653e\u6e05\u55ae\u6587\u4ef6","title":"playlist delete &lt;\u64ad\u653e\u6e05\u55ae\u540d\u7a31&gt;"},{"location":"commands/#playlist-make","text":"\u5275\u5efa\u65b0\u7684\u7a7a\u767d\u64ad\u653e\u6e05\u55ae","title":"playlist make &lt;\u64ad\u653e\u6e05\u55ae\u540d\u7a31&gt;"},{"location":"commands/#playlist-setdefault","text":"\u8a2d\u7f6e\u4f3a\u670d\u5668\u7684\u9810\u8a2d\u64ad\u653e\u6e05\u55ae\uff0c\u7576\u4f47\u5217\u70ba\u7a7a\u4e14\u6a5f\u5668\u4eba\u555f\u52d5\u6642\u64ad\u653e\u6b64\u64ad\u653e\u6e05\u55ae","title":"playlist setdefault &lt;\u64ad\u653e\u6e05\u55ae\u540d\u7a31&gt;"},{"location":"commands/#playlist-setdefault-none","text":"\u6e05\u9664\u9810\u8a2d\u64ad\u653e\u6e05\u55ae","title":"playlist setdefault none"},{"location":"commands/#setavatar-url","text":"\u8a2d\u7f6e\u6a5f\u5668\u4eba\u7684 \u982d\u50cf","title":"setavatar &lt;url&gt;"},{"location":"commands/#setgame","text":"\u8a2d\u7f6e\u6a5f\u5668\u4eba\u6b63\u5728\u73a9\u7684\u904a\u6232","title":"setgame [\u904a\u6232]"},{"location":"commands/#setgame-stream","text":"\u8a2d\u7f6e\u6a5f\u5668\u4eba\u6b63\u5728 \"\u4e32\u6d41\" \u7684\u904a\u6232","title":"setgame stream &lt;\u7528\u6236\u540d&gt; &lt;\u904a\u6232\u540d\u7a31&gt;"},{"location":"commands/#setname","text":"\u8a2d\u7f6e\u6a5f\u5668\u4eba\u7684\u4f7f\u7528\u8005\u540d\u7a31","title":"setname &lt;\u540d\u7a31&gt;"},{"location":"commands/#setstatus","text":"\u8a2d\u7f6e\u6a5f\u5668\u4eba\u7684\u72c0\u614b\uff08\u5728\u7dda\u3001\u9592\u7f6e\u3001\u52ff\u64fe\u3001\u96b1\u5f62\uff09","title":"setstatus &lt;\u72c0\u614b&gt;"},{"location":"commands/#shutdown","text":"\u5b89\u5168\u95dc\u9589","title":"shutdown"},{"location":"config/","text":"///////////////////////////////////////////////////////// // Config for the JMusicBot // ///////////////////////////////////////////////////////// // Any line starting with // is ignored // // You MUST set the token and owner // // All other items have defaults if you don't set them // // Open in Notepad++ for best results // ///////////////////////////////////////////////////////// // This sets the token for the bot to log in with // This MUST be a bot token (user tokens will not work) // If you don't know how to get a bot token, please see the guide here: // https://github.com/jagrosh/MusicBot/wiki/Getting-a-Bot-Token token = BOT_TOKEN_HERE // This sets the owner of the bot // This needs to be the owner's ID (a 17-18 digit number) // https://github.com/jagrosh/MusicBot/wiki/Finding-Your-User-ID owner = 0 // OWNER ID // This sets the prefix for the bot // The prefix is used to control the commands // If you use !!, the play command will be !!play // If you do not set this, the prefix will be a mention of the bot (@Botname play) prefix = \"@mention\" // If you set this, it modifies the default game of the bot // Set this to NONE to have no game // Set this to DEFAULT to use the default game // You can make the game \"Playing X\", \"Listening to X\", or \"Watching X\" // where X is the title. If you don't include an action, it will use the // default of \"Playing\" game = \"DEFAULT\" // If you set this, it will modify the default status of bot // Valid values: ONLINE IDLE DND INVISIBLE status = ONLINE // If you set this to true, the bot will list the title of the song it is currently playing in its // \"Playing\" status. Note that this will ONLY work if the bot is playing music on ONE guild; // if the bot is playing on multiple guilds, this will not work. songinstatus=false // If you set this, the bot will also use this prefix in addition to // the one provided above altprefix = \"NONE\" // If you set these, it will change the various emojis success = \"\ud83c\udfb6\" warning = \"\ud83d\udca1\" error = \"\ud83d\udeab\" loading = \"\u231a\" searching = \"\ud83d\udd0e\" // If you set this, you change the word used to view the help. // For example, if you set the prefix to !! and the help to cmds, you would type // !!cmds to see the help text help = help // If you set this, the \"nowplaying\" command will show youtube thumbnails // Note: If you set this to true, the nowplaying boxes will NOT refresh // This is because refreshing the boxes causes the image to be reloaded // every time it refreshes. npimages = false // If you set this, the bot will not leave a voice channel after it finishes a queue. // Keep in mind that being connected to a voice channel uses additional bandwith, // so this option is not recommended if bandwidth is a concern. stayinchannel = false // This sets the maximum amount of seconds any track loaded can be. If not set or set // to any number less than or equal to zero, there is no maximum time length. This time // restriction applies to songs loaded from any source. maxtime = 0 // This sets the maximum number of pages of songs that can be loaded from a YouTube // playlist. Each page can contain up to 100 tracks. Playing a playlist with more // pages than the maximum will stop loading after the provided number of pages. // For example, if the max was set to 15 and a playlist contained 1850 tracks, // only the first 1500 tracks (15 pages) would be loaded. By default, this is // set to 10 pages (1000 tracks). maxytplaylistpages = 10 // This sets the ratio of users that must vote to skip the currently playing song. // Guild owners can define their own skip ratios, but this will be used if a guild // has not defined their own skip ratio. skipratio = 0.55 // This sets the amount of seconds the bot will stay alone on a voice channel until it // automatically leaves the voice channel and clears the queue. If not set or set // to any number less than or equal to zero, the bot won't leave when alone. alonetimeuntilstop = 0 // This sets an alternative folder to be used as the Playlists folder // This can be a relative or absolute path playlistsfolder = \"Playlists\" // By default, the bot will DM the owner if the bot is running and a new version of the bot // becomes available. Set this to false to disable this feature. updatealerts=true // Changing this changes the lyrics provider // Currently available providers: \"A-Z Lyrics\", \"Genius\", \"MusicMatch\", \"LyricsFreak\" // At the time of writing, I would recommend sticking with A-Z Lyrics or MusicMatch, // as Genius tends to have a lot of non-song results and you might get something // completely unrelated to what you want. // If you are interested in contributing a provider, please see // https://github.com/jagrosh/JLyrics lyrics.default = \"A-Z Lyrics\" // These settings allow you to configure custom aliases for all commands. // Multiple aliases may be given, separated by commas. // // Example 1: Giving command \"play\" the alias \"p\": // play = [ p ] // // Example 2: Giving command \"search\" the aliases \"yts\" and \"find\": // search = [ yts, find ] aliases { // General commands settings = [ status ] // Music commands lyrics = [] nowplaying = [ np, current ] play = [] playlists = [ pls ] queue = [ list ] remove = [ delete ] scsearch = [] search = [ ytsearch ] shuffle = [] skip = [ voteskip ] // Admin commands prefix = [ setprefix ] setdj = [] setskip = [ setskippercent, skippercent, setskipratio ] settc = [] setvc = [] // DJ Commands forceremove = [ forcedelete, modremove, moddelete, modelete ] forceskip = [ modskip ] movetrack = [ move ] pause = [] playnext = [] queuetype = [] repeat = [] skipto = [ jumpto ] stop = [ leave ] volume = [ vol ] } // This sets the logging verbosity. // Available levels: off, error, warn, info, debug, trace, all // // It is recommended to leave this at info. Debug log levels might help with troubleshooting, // but can contain sensitive data. loglevel = info // Transforms are used to modify specific play inputs and convert them to different kinds of inputs // These are quite complicated to use, and have limited use-cases, but in theory allow for rough // whitelists or blacklists, roundabout loading from some sources, and customization of how things are // requested. // // These are NOT EASY to set up, so if you want to use these, you'll need to look through the code // for how they work and what fields are needed. Also, it's possible this feature might get entirely // removed in the future if I find a better way to do this. transforms = {} // If you set this to true, it will enable the eval command for the bot owner. This command // allows the bot owner to run arbitrary code from the bot's account. // // WARNING: // This command can be extremely dangerous. If you don't know what you're doing, you could // cause horrific problems on your Discord server or on whatever computer this bot is running // on. Never run this command unless you are completely positive what you are running. // // DO NOT ENABLE THIS IF YOU DON'T KNOW WHAT THIS DOES OR HOW TO USE IT // IF SOMEONE ASKS YOU TO ENABLE THIS, THERE IS AN 11/10 CHANCE THEY ARE TRYING TO SCAM YOU eval=false evalengine=\"Nashorn\"","title":"Example Config"},{"location":"finding-your-user-id/","text":"This page describes how to find your unique User ID. Any of these methods work, and you only need to do one of them. Method 1 # Enter text as if you are going to mention (ping) yourself. (Make sure that you are mentioning yourself and no one else) Insert a backslash ( \\ ) before the mention Send the message. What will appear is your ID surrounded by <@ or <@! on the left and > on the right (the message should be highlighted) Copy only the numbers; the other symbols are not part of your User ID Method 2 # Click the User Settings button In the Appearance tab, check the Developer Mode option Right-click your username in a member list, and select Copy ID","title":"Finding Your User ID"},{"location":"finding-your-user-id/#method-1","text":"Enter text as if you are going to mention (ping) yourself. (Make sure that you are mentioning yourself and no one else) Insert a backslash ( \\ ) before the mention Send the message. What will appear is your ID surrounded by <@ or <@! on the left and > on the right (the message should be highlighted) Copy only the numbers; the other symbols are not part of your User ID","title":"Method 1"},{"location":"finding-your-user-id/#method-2","text":"Click the User Settings button In the Appearance tab, check the Developer Mode option Right-click your username in a member list, and select Copy ID","title":"Method 2"},{"location":"getting-a-bot-token/","text":"This page will describe, in detail, how to obtain a token for your music bot. Navigate to your Applications Page (you might need to log in first) Click the Create an application button On the General Information tab, set a Name to identify your application (this is not the bot's name) Navigate to the Bot tab and select Add Bot Click Yes, do it! Set a name and an avatar (optional) Uncheck Public Bot and Check Message Content Intent and Server Members Intents Warning If Public Bot is left checked, anyone will be able to invite your bot into servers. JMusicBot is not intended to be used as a public music bot, and will break on verified bots! Save your settings Select the Copy button in the token section to copy the bot's token to your clipboard.","title":"Getting a Bot Token"},{"location":"hosting/","text":"I want to run this bot 24/7! How can I do this? Well, there are many options available; I've described several of the most-common options below, including their pros (+) and cons (-). \ud83c\udf10 Online Hosting # OVH # + Best power-to-cost ratio + No usage limits + Reliable - No free trial DigitalOcean # + $50 credit with GitHub Student Pack (requires Credit Card and $5 down payment) + Useful tutorials + No usage limits - Poor power-to-cost ratio Google Cloud # + $300 free credit (requires Credit Card) + Free tier hosting - Billed for usage above certain limits Amazon Web Services # + 1 year free credit (requires Credit Card) - Billed for usage above certain limits \ud83c\udfe0 Home Hosting # Desktop PC # + Easiest access + Familiar OS/Environment - High electricity costs - Shared home internet bandwidth - CPU & RAM usage on main PC Dedicated Server # + Familiar OS/Environment - High electricity costs - Shared home internet bandwidth Raspberry Pi # + Low electricity costs - Shared home internet bandwidth - Possible poor performance for multiple streams \ud83d\udeab Don't Use This Hosting # Heroku # - No file write access (server settings can't be changed) - Usage limits (can only run for a portion of a month) - Poor performance Glitch # - No file write access (server settings can't be changed) - Usage limits - Poor performance Replit # - Usage limits - Poor performance","title":"Hosting"},{"location":"hosting/#online-hosting","text":"","title":"\ud83c\udf10 Online Hosting"},{"location":"hosting/#ovh","text":"+ Best power-to-cost ratio + No usage limits + Reliable - No free trial","title":"OVH"},{"location":"hosting/#digitalocean","text":"+ $50 credit with GitHub Student Pack (requires Credit Card and $5 down payment) + Useful tutorials + No usage limits - Poor power-to-cost ratio","title":"DigitalOcean"},{"location":"hosting/#google-cloud","text":"+ $300 free credit (requires Credit Card) + Free tier hosting - Billed for usage above certain limits","title":"Google Cloud"},{"location":"hosting/#amazon-web-services","text":"+ 1 year free credit (requires Credit Card) - Billed for usage above certain limits","title":"Amazon Web Services"},{"location":"hosting/#home-hosting","text":"","title":"\ud83c\udfe0 Home Hosting"},{"location":"hosting/#desktop-pc","text":"+ Easiest access + Familiar OS/Environment - High electricity costs - Shared home internet bandwidth - CPU & RAM usage on main PC","title":"Desktop PC"},{"location":"hosting/#dedicated-server","text":"+ Familiar OS/Environment - High electricity costs - Shared home internet bandwidth","title":"Dedicated Server"},{"location":"hosting/#raspberry-pi","text":"+ Low electricity costs - Shared home internet bandwidth - Possible poor performance for multiple streams","title":"Raspberry Pi"},{"location":"hosting/#dont-use-this-hosting","text":"","title":"\ud83d\udeab Don't Use This Hosting"},{"location":"hosting/#heroku","text":"- No file write access (server settings can't be changed) - Usage limits (can only run for a portion of a month) - Poor performance","title":"Heroku"},{"location":"hosting/#glitch","text":"- No file write access (server settings can't be changed) - Usage limits - Poor performance","title":"Glitch"},{"location":"hosting/#replit","text":"- Usage limits - Poor performance","title":"Replit"},{"location":"installing-java/","text":"JMusicBot requires Java 11 # Some newer builds may also work, but you could run into compatibility issues. For most platforms, the easiest method to install Java is to download the installer (as listed below). Linux users can alternatively install via the command line using a package manager. Download Installer (any platform) # Navigate to Adoptium or Oracle Download the correct installer for your system Run the installer or manually install the package (depending on your selection) Install via Command Line (Linux only) # Tip If you have multiple Java versions installed, you can use sudo update-alternatives --config java to select which will be used by default. You can run java -version to see what version is currently the default. Ubuntu # Run: sudo apt-get update && sudo apt-get install openjdk-11-jre -y Debian # Install sudo if not installed ( apt update && apt upgrade && apt install sudo ) Run: sudo apt-get install default-jre Raspbian (Raspberry Pi) # Run: sudo apt-get install oracle-java11-jdk","title":"Installing Java"},{"location":"installing-java/#jmusicbot-requires-java-11","text":"Some newer builds may also work, but you could run into compatibility issues. For most platforms, the easiest method to install Java is to download the installer (as listed below). Linux users can alternatively install via the command line using a package manager.","title":"JMusicBot requires Java 11"},{"location":"installing-java/#download-installer-any-platform","text":"Navigate to Adoptium or Oracle Download the correct installer for your system Run the installer or manually install the package (depending on your selection)","title":"Download Installer (any platform)"},{"location":"installing-java/#install-via-command-line-linux-only","text":"Tip If you have multiple Java versions installed, you can use sudo update-alternatives --config java to select which will be used by default. You can run java -version to see what version is currently the default.","title":"Install via Command Line (Linux only)"},{"location":"installing-java/#ubuntu","text":"Run: sudo apt-get update && sudo apt-get install openjdk-11-jre -y","title":"Ubuntu"},{"location":"installing-java/#debian","text":"Install sudo if not installed ( apt update && apt upgrade && apt install sudo ) Run: sudo apt-get install default-jre","title":"Debian"},{"location":"installing-java/#raspbian-raspberry-pi","text":"Run: sudo apt-get install oracle-java11-jdk","title":"Raspbian (Raspberry Pi)"},{"location":"playlists/","text":"\ud83d\udcc3 Youtube Playlists # To play a youtube playlist, all you need is the play command and a playlist link or playlist ID. Examples: # Full Playlist URL + !play https://www.youtube.com/playlist?list=PLUib4KwT0DMJaPgg_nr1ia8FY5JcXksvb # Playlist ID + !play PLUib4KwT0DMJaPgg_nr1ia8FY5JcXksvb # Not a Playlist link! (notice the `watch?v=`) - !play https://www.youtube.com/watch?v=bd2B6SjMh_w&list=PLUib4KwT0DMJaPgg_nr1ia8FY5JcXksvb&index=4 \ud83d\udcc3 Local Playlists # Local playlists are .txt files found in the Playlists folder in the same folder as you are running the bot from. Each line of the file is a new entry, and entries can be: * links to youtube videos, soundcloud tracks, or online files * full or relative path to local files * links to youtube or soundcloud playlists * links to online streams or radio * searches, prefixed by ytsearch: for a youtube search and scsearch: for a soundcloud search Lines starting with # or // are ignored for songs. To make a playlist automatically shuffle when loaded, add #shuffle or //shuffle on its own line somewhere in the playlist. Example Playlist: # This is an example playlist # You can put this in your Playlists folder as example_playlist.txt # The following line currently makes the playlist shuffle # Remove this line entirely if you don't want shuffling # shuffle # youtube playlist id: PLUib4KwT0DMJaPgg_nr1ia8FY5JcXksvb # searches ytsearch:gorillaz dare audio scsearch:lights metrognome # direct link https://www.youtube.com/watch?v=x7ogV49WGco Example Command: !play playlist example_playlist \ud83d\udcc3 Soundcloud Playlists # Just use the play command followed by the playlist link. Example: !play [link coming soon] \ud83d\udcc3 Spotify # Unfortunately, Spotify's Terms of Service prevent playing music from Spotify. Please consider using a playlist converter such as PlaylistConverter.net to convert a Spotify playlist into a YouTube playlist.","title":"Playlists"},{"location":"playlists/#youtube-playlists","text":"To play a youtube playlist, all you need is the play command and a playlist link or playlist ID. Examples: # Full Playlist URL + !play https://www.youtube.com/playlist?list=PLUib4KwT0DMJaPgg_nr1ia8FY5JcXksvb # Playlist ID + !play PLUib4KwT0DMJaPgg_nr1ia8FY5JcXksvb # Not a Playlist link! (notice the `watch?v=`) - !play https://www.youtube.com/watch?v=bd2B6SjMh_w&list=PLUib4KwT0DMJaPgg_nr1ia8FY5JcXksvb&index=4","title":"\ud83d\udcc3 Youtube Playlists"},{"location":"playlists/#local-playlists","text":"Local playlists are .txt files found in the Playlists folder in the same folder as you are running the bot from. Each line of the file is a new entry, and entries can be: * links to youtube videos, soundcloud tracks, or online files * full or relative path to local files * links to youtube or soundcloud playlists * links to online streams or radio * searches, prefixed by ytsearch: for a youtube search and scsearch: for a soundcloud search Lines starting with # or // are ignored for songs. To make a playlist automatically shuffle when loaded, add #shuffle or //shuffle on its own line somewhere in the playlist. Example Playlist: # This is an example playlist # You can put this in your Playlists folder as example_playlist.txt # The following line currently makes the playlist shuffle # Remove this line entirely if you don't want shuffling # shuffle # youtube playlist id: PLUib4KwT0DMJaPgg_nr1ia8FY5JcXksvb # searches ytsearch:gorillaz dare audio scsearch:lights metrognome # direct link https://www.youtube.com/watch?v=x7ogV49WGco Example Command: !play playlist example_playlist","title":"\ud83d\udcc3 Local Playlists"},{"location":"playlists/#soundcloud-playlists","text":"Just use the play command followed by the playlist link. Example: !play [link coming soon]","title":"\ud83d\udcc3 Soundcloud Playlists"},{"location":"playlists/#spotify","text":"Unfortunately, Spotify's Terms of Service prevent playing music from Spotify. Please consider using a playlist converter such as PlaylistConverter.net to convert a Spotify playlist into a YouTube playlist.","title":"\ud83d\udcc3 Spotify"},{"location":"running-as-a-service/","text":"Running as a service # Running JMusicBot as a service allows it to run in the background without needing to be manually started. This is useful for running the bot on a server, or if you want to be able to close your terminal without stopping the bot. Linux using systemd # Warning This method assumes that you've created a user for the bot to run as. If you haven't, see this guide for instructions. Note Copy the jar file to the home directory of the user that the bot is running as, or change the WorkingDirectory and ExecStart lines in the service file to point to the correct location. Open a terminal and run the following command to create a new service file: sudo nano /etc/systemd/system/JMusicBot.service Copy the following text into the file and save it: [Unit] Description = JMusicBot Requires = network.target After = network.target [Service] WorkingDirectory = /home/<username> User = <username> Group = <username> Type = simple ExecStart = /usr/bin/env java -Dnogui=true -jar JMusicBot.jar Restart = always RestartSec = 10 [Install] WantedBy = multi-user.target Note Replace <username> with the name of the user that the bot is running as. Run the following command to start the bot: sudo systemctl start JMusicBot Run the following command to stop the bot: sudo systemctl stop JMusicBot Run the following command to restart the bot: sudo systemctl restart JMusicBot Run the following command to enable the bot to start on boot: sudo systemctl enable JMusicBot Linux using screen # Warning This method is not recommended for production use, see systemd instead. Install the screen utility, if it isn't already installed. Run the following command to start the bot: screen -dmS JMusicBot java -jar JMusicBot.jar Run the following command to stop the bot: screen -S JMusicBot -X quit Run the following command to restart the bot: screen -S JMusicBot -X quit screen -dmS JMusicBot java -jar JMusicBot.jar Windows # Download the NSSM executable and place it in the same directory as the JMusicBot jar file. Open a command prompt in the same directory as the JMusicBot jar file and run the following command: nssm install JMusicBot java -jar JMusicBot.jar Run the following command to start the service: nssm start JMusicBot Run the following command to stop the service: nssm stop JMusicBot Run the following command to remove the service: nssm remove JMusicBot","title":"Running as a service"},{"location":"running-as-a-service/#running-as-a-service","text":"Running JMusicBot as a service allows it to run in the background without needing to be manually started. This is useful for running the bot on a server, or if you want to be able to close your terminal without stopping the bot.","title":"Running as a service"},{"location":"running-as-a-service/#linux-using-systemd","text":"Warning This method assumes that you've created a user for the bot to run as. If you haven't, see this guide for instructions. Note Copy the jar file to the home directory of the user that the bot is running as, or change the WorkingDirectory and ExecStart lines in the service file to point to the correct location. Open a terminal and run the following command to create a new service file: sudo nano /etc/systemd/system/JMusicBot.service Copy the following text into the file and save it: [Unit] Description = JMusicBot Requires = network.target After = network.target [Service] WorkingDirectory = /home/<username> User = <username> Group = <username> Type = simple ExecStart = /usr/bin/env java -Dnogui=true -jar JMusicBot.jar Restart = always RestartSec = 10 [Install] WantedBy = multi-user.target Note Replace <username> with the name of the user that the bot is running as. Run the following command to start the bot: sudo systemctl start JMusicBot Run the following command to stop the bot: sudo systemctl stop JMusicBot Run the following command to restart the bot: sudo systemctl restart JMusicBot Run the following command to enable the bot to start on boot: sudo systemctl enable JMusicBot","title":"Linux using systemd"},{"location":"running-as-a-service/#linux-using-screen","text":"Warning This method is not recommended for production use, see systemd instead. Install the screen utility, if it isn't already installed. Run the following command to start the bot: screen -dmS JMusicBot java -jar JMusicBot.jar Run the following command to stop the bot: screen -S JMusicBot -X quit Run the following command to restart the bot: screen -S JMusicBot -X quit screen -dmS JMusicBot java -jar JMusicBot.jar","title":"Linux using screen"},{"location":"running-as-a-service/#windows","text":"Download the NSSM executable and place it in the same directory as the JMusicBot jar file. Open a command prompt in the same directory as the JMusicBot jar file and run the following command: nssm install JMusicBot java -jar JMusicBot.jar Run the following command to start the service: nssm start JMusicBot Run the following command to stop the service: nssm stop JMusicBot Run the following command to remove the service: nssm remove JMusicBot","title":"Windows"},{"location":"setup/","text":"1\ufe0f\u20e3 Install Java # JMusicBot requires Java 11 Instructions on how to install Java on your system: Installing Java 2\ufe0f\u20e3 Download JMusicBot # Download the latest JMusicBot-X.Y.Z.jar (and optionally, example config.txt file) from the releases page (or, get the URL from the releases page and then use wget or similar command-line tool to download). Your folder should look similar to this (on desktop): Note The above image is Windows, but it should look similar on all platforms Warning Do not put this in the Downloads or Desktop . Use a folder within Documents 3\ufe0f\u20e3 Configure the bot # Create a bot account and configure it on the Discord Developer page See Getting a Bot Token for step-by-step instructions Make sure that 'Public Bot' is unchecked, and 'Message Content Intent' and 'Server Members Intent' are checked Create the config file Running the bot without a config file will prompt you for a bot token and a user ID. After you provide these, it will generate a config file for you. An example config.txt file can be found on Example Config . You can create a config.txt file in the same folder as the bot, paste the contents of the example config file, and modify the values in it. See Getting a Bot Token and Finding Your User ID if you need help with finding some values for the config. Warning You must restart the bot every time you edit config.txt . It is recommended to fully shut down the bot before editing the file. 4\ufe0f\u20e3 Run JMusicBot # Run the jar file (choose one of these options): Double-click the jar file (on desktop environments), OR Run java -Dnogui=true -jar JMusicBot-X.Y.Z.jar from the command line (replace X, Y, and Z with the release numbers) Provide the requested information, if prompted. Wait for the \"Finished Loading\" message. Tip If you want to run the bot in the background, see Running as a Service 5\ufe0f\u20e3 Add your bot to your server # When the bot starts, if it hasn't been added to any servers yet, it will provide you with a link in the console. Alternatively, follow these instructions (with images): Adding Your Bot To Your Server Tip If you run into problems, make sure to check out the Troubleshooting page!","title":"Setup Guide"},{"location":"setup/#1-install-java","text":"JMusicBot requires Java 11 Instructions on how to install Java on your system: Installing Java","title":"1\ufe0f\u20e3 Install Java"},{"location":"setup/#2-download-jmusicbot","text":"Download the latest JMusicBot-X.Y.Z.jar (and optionally, example config.txt file) from the releases page (or, get the URL from the releases page and then use wget or similar command-line tool to download). Your folder should look similar to this (on desktop): Note The above image is Windows, but it should look similar on all platforms Warning Do not put this in the Downloads or Desktop . Use a folder within Documents","title":"2\ufe0f\u20e3 Download JMusicBot"},{"location":"setup/#3-configure-the-bot","text":"Create a bot account and configure it on the Discord Developer page See Getting a Bot Token for step-by-step instructions Make sure that 'Public Bot' is unchecked, and 'Message Content Intent' and 'Server Members Intent' are checked Create the config file Running the bot without a config file will prompt you for a bot token and a user ID. After you provide these, it will generate a config file for you. An example config.txt file can be found on Example Config . You can create a config.txt file in the same folder as the bot, paste the contents of the example config file, and modify the values in it. See Getting a Bot Token and Finding Your User ID if you need help with finding some values for the config. Warning You must restart the bot every time you edit config.txt . It is recommended to fully shut down the bot before editing the file.","title":"3\ufe0f\u20e3 Configure the bot"},{"location":"setup/#4-run-jmusicbot","text":"Run the jar file (choose one of these options): Double-click the jar file (on desktop environments), OR Run java -Dnogui=true -jar JMusicBot-X.Y.Z.jar from the command line (replace X, Y, and Z with the release numbers) Provide the requested information, if prompted. Wait for the \"Finished Loading\" message. Tip If you want to run the bot in the background, see Running as a Service","title":"4\ufe0f\u20e3 Run JMusicBot"},{"location":"setup/#5-add-your-bot-to-your-server","text":"When the bot starts, if it hasn't been added to any servers yet, it will provide you with a link in the console. Alternatively, follow these instructions (with images): Adding Your Bot To Your Server Tip If you run into problems, make sure to check out the Troubleshooting page!","title":"5\ufe0f\u20e3 Add your bot to your server"},{"location":"things-that-wont-be-added/","text":"Non-Music Commands/Features # JMusicBot is a music bot, so features that have no relation to music (such as moderation or image-generation features) will not be added. If you need a bot that does things other than music, consider searching on the Discord Bots website . Spotify # Playing from Spotify is not possible, for three main reasons: 1. This would require an additional API key to look up songs on Spotify, which would be confusing for some users and overall make the bot feel more complicated to use. 2. Streaming from Spotify isn't allowed, so the bot would have to \"guess\" and just play the closest match from YouTube, which is unreliable at best. 3. Discord already has native support for syncing up Spotify playlists between users, so there's no reason to not just use that (and get better audio anyway from Spotify instead of from a Discord voice channel). Features Requiring Additional API Keys # This includes things like Spotify (as noted above), which would require users to obtain and configure more keys (beyond a Discord bot token). This process can be confusing for some users and there are other tools online that can do the job better (in most cases).","title":"Things that Won't be Added"},{"location":"things-that-wont-be-added/#non-music-commandsfeatures","text":"JMusicBot is a music bot, so features that have no relation to music (such as moderation or image-generation features) will not be added. If you need a bot that does things other than music, consider searching on the Discord Bots website .","title":"Non-Music Commands/Features"},{"location":"things-that-wont-be-added/#spotify","text":"Playing from Spotify is not possible, for three main reasons: 1. This would require an additional API key to look up songs on Spotify, which would be confusing for some users and overall make the bot feel more complicated to use. 2. Streaming from Spotify isn't allowed, so the bot would have to \"guess\" and just play the closest match from YouTube, which is unreliable at best. 3. Discord already has native support for syncing up Spotify playlists between users, so there's no reason to not just use that (and get better audio anyway from Spotify instead of from a Discord voice channel).","title":"Spotify"},{"location":"things-that-wont-be-added/#features-requiring-additional-api-keys","text":"This includes things like Spotify (as noted above), which would require users to obtain and configure more keys (beyond a Discord bot token). This process can be confusing for some users and there are other tools online that can do the job better (in most cases).","title":"Features Requiring Additional API Keys"},{"location":"troubleshooting/","text":"Known issues # There may be bugs or temporary issues with MusicBot, such as tracks not loading from specific sources, like YouTube or SoundCloud. See the Issues page and check if your issue is known. Problems starting the bot # A message stating 'A Java Exception has occurred' when I try to run the bot! Check your Java version - You might be running a version of Java that is too old. JMusicBot reqires Java 11. The .jar file is opening in WinRAR or is acting like a zipped file! Check your Java version - You might not have Java installed Set Java as the default program for .jar files - On windows, you can do this by right-clicking the .jar file, select Open with > Choose another app > Check Always use this app to open .jar files > choose the newest Java installation The bot is looking for the config file in an unexpected location! This can sometimes happen on Windows. Make sure: * Run the bot from a writable folder - Use a folder in your 'Documents', not from your Desktop. * Double-Click , don't use 'Open With' * Use Command Prompt or Powershell in the folder with the jar and use java -jar JMusicBot-VERSION_HERE.jar (replacing the version correctly) Problems using commands # The bot doesn't respond to commands! Check the bot's prefix - Look in your config file to see what you set the prefix to. The default prefix is a ping of the bot (ex: @yourbot'sname ping would run the ping command with the default prefix). Check the bot's configured intents - On the Discord Developer page, make sure that the 'Message Content Intent' is enabled. A message with a URL to your bot's specific developer page should be printed in console when starting up the bot. Check the bot's permissions in Discord - If the bot responds to the help command, but no other commands, the bot is likely missing Send Messages permissions in the text channel. If the bot can respond to ping , it has sufficient permissions to at least provide other error messages. Problems playing music # Music doesn't play if I set the volume to something other than 100! If music stops playing when you change the volume, this means that an internal library could not be loaded. This means you are either using an unsupported java version or the wrong jar file. * Check your Java version - You might be running an unsupported version. Try re-installing the latest 64-bit version of java. It seems like music is playing, but I don't hear anything! Check your Discord sound settings - Make sure that you can hear other users, or other bots Check that you don't have the bot muted - You may have muted the bot, or set its User Volume to 0% Music never starts playing! If the bot runs, but when you start to play music it never starts and is stuck at 0:00 , try some of these potential fixes: * Check your Java version - You can run java -version at the command line to check your Java version. This bot requires JDK 1.8 or higher. OpenJDK may work but is not guaranteed to provide full functionality. Also, for Windows user, make sure you are running 64-bit Java. * Check your hosting - If you are hosting the bot on a VPS (Virtual Private Server), check which company is hosting it. * Check the logs - There are a few things you can look for in the logs, but generally something like Request Timed Out means that the network connection that the bot has may be struggling and possibly unable to support streaming music. * Change your Discord voice region - Discord frequently makes changes on their end which can cause issues and/or disconnects for JMusicBot. Try changing the region to see if that helps. Error when loading from YouTube (429) If you see an error similar to \"Error when loading from YouTube 429\" when attempting to play songs from YouTube, it means that YouTube has blocked your bot's IP. Try one of these potential solutions, and see here for more information: * Change IP addresses - If you're hosting at home, you may be able to simply turn your router off and back on again. Some online hosts may offer the option to change your IP or to route through a different one. * Turn the bot off for several days - Keeping the bot offline (or only playing songs from non-youtube sources) for several days will allow YouTube to eventually remove your IP ban.","title":"Troubleshooting"},{"location":"troubleshooting/#known-issues","text":"There may be bugs or temporary issues with MusicBot, such as tracks not loading from specific sources, like YouTube or SoundCloud. See the Issues page and check if your issue is known.","title":"Known issues"},{"location":"troubleshooting/#problems-starting-the-bot","text":"A message stating 'A Java Exception has occurred' when I try to run the bot! Check your Java version - You might be running a version of Java that is too old. JMusicBot reqires Java 11. The .jar file is opening in WinRAR or is acting like a zipped file! Check your Java version - You might not have Java installed Set Java as the default program for .jar files - On windows, you can do this by right-clicking the .jar file, select Open with > Choose another app > Check Always use this app to open .jar files > choose the newest Java installation The bot is looking for the config file in an unexpected location! This can sometimes happen on Windows. Make sure: * Run the bot from a writable folder - Use a folder in your 'Documents', not from your Desktop. * Double-Click , don't use 'Open With' * Use Command Prompt or Powershell in the folder with the jar and use java -jar JMusicBot-VERSION_HERE.jar (replacing the version correctly)","title":"Problems starting the bot"},{"location":"troubleshooting/#problems-using-commands","text":"The bot doesn't respond to commands! Check the bot's prefix - Look in your config file to see what you set the prefix to. The default prefix is a ping of the bot (ex: @yourbot'sname ping would run the ping command with the default prefix). Check the bot's configured intents - On the Discord Developer page, make sure that the 'Message Content Intent' is enabled. A message with a URL to your bot's specific developer page should be printed in console when starting up the bot. Check the bot's permissions in Discord - If the bot responds to the help command, but no other commands, the bot is likely missing Send Messages permissions in the text channel. If the bot can respond to ping , it has sufficient permissions to at least provide other error messages.","title":"Problems using commands"},{"location":"troubleshooting/#problems-playing-music","text":"Music doesn't play if I set the volume to something other than 100! If music stops playing when you change the volume, this means that an internal library could not be loaded. This means you are either using an unsupported java version or the wrong jar file. * Check your Java version - You might be running an unsupported version. Try re-installing the latest 64-bit version of java. It seems like music is playing, but I don't hear anything! Check your Discord sound settings - Make sure that you can hear other users, or other bots Check that you don't have the bot muted - You may have muted the bot, or set its User Volume to 0% Music never starts playing! If the bot runs, but when you start to play music it never starts and is stuck at 0:00 , try some of these potential fixes: * Check your Java version - You can run java -version at the command line to check your Java version. This bot requires JDK 1.8 or higher. OpenJDK may work but is not guaranteed to provide full functionality. Also, for Windows user, make sure you are running 64-bit Java. * Check your hosting - If you are hosting the bot on a VPS (Virtual Private Server), check which company is hosting it. * Check the logs - There are a few things you can look for in the logs, but generally something like Request Timed Out means that the network connection that the bot has may be struggling and possibly unable to support streaming music. * Change your Discord voice region - Discord frequently makes changes on their end which can cause issues and/or disconnects for JMusicBot. Try changing the region to see if that helps. Error when loading from YouTube (429) If you see an error similar to \"Error when loading from YouTube 429\" when attempting to play songs from YouTube, it means that YouTube has blocked your bot's IP. Try one of these potential solutions, and see here for more information: * Change IP addresses - If you're hosting at home, you may be able to simply turn your router off and back on again. Some online hosts may offer the option to change your IP or to route through a different one. * Turn the bot off for several days - Keeping the bot offline (or only playing songs from non-youtube sources) for several days will allow YouTube to eventually remove your IP ban.","title":"Problems playing music"}]}